{"unbanNotify":"function fetchData() {\n    interval = setTimeout(() => {\n      if (stopAutomatedModeTrigger) {\n        stopAutomatedModeTrigger = false\n        return(\"exit\")\n      }\n      fetch('https://` + EtabPrefix + `.index-education.net/pronote/', {redirect: 'manual'})\n        .then(response => {\n          return response.text();\n        })\n        .then(data => {\n          if (data.includes('Votre adresse IP est provisoirement suspendue!') || data.includes('Your IP address is temporarily suspended!')) {\n            console.log('Banned.');\n            fetchData();\n          } else {\n            console.log('Unbanned.');\n            PronoteUnbannedNotify();\n          }\n        })\n        .catch(error => {\n          console.error('Error:', error);\n        });\n    }, 30000);\n  }\n\n  if (\"Notification\" in window) {\n    Notification.requestPermission()\n  }\n    function PronoteUnbannedNotify() {\n      if (\"Notification\" in window) {\n        Notification.requestPermission()\n          .then(function (permission) {\n            if (permission === \"granted\") {\n              var notification = new Notification(\"Your IP is unbanned from Pronote\", {\n                body: \"It is\",\n              });\n              notification.onclick = function () {\n            };\n          }\n        })\n        .catch(function (error) {\n          console.error(\"Error while requesting permission:\", error);\n        });\n      } else {\n        console.log(\"Notifications not supported in this browser.\");\n      }\n    }\n  \n  fetchData();\n  // Note : you can use \"fetchData();\" again when notification is received to listen again.","automatedMode":"function fetchData() {\n    interval = setInterval(() => {\n      if (stopAutomatedModeTrigger) {\n        stopAutomatedModeTrigger = false\n        clearInterval(interval)\n      }\n    fetch('https://` + EtabPrefix + `.index-education.net/pronote/', {redirect: 'manual'})\n      .then(response => {\n        return response.text();\n      })\n      .then(data => {\n        if (data.includes('Votre adresse IP est provisoirement suspendue!') || data.includes('Your IP address is temporarily suspended!')) {\n          console.log('Continuing the loop.');\n        } else {\n          console.log('Launching requests. Relaunching the loop.');\n          for (var i = 0; i < requestNumber; i++) {\n            fetch('https://` + EtabPrefix + `.index-education.net/pronote/', {\n              mode: 'no-cors'\n            });\n          }\n        }\n      })\n      .catch(error => {\n        console.error('Error:', error);\n      });\n  }, 30000);\n}\nfetchData();","automatedModeNotify":"Notification.requestPermission()\n\nfunction fetchData() {\n  interval = setInterval(() => {\n    if (stopAutomatedModeTrigger) {\n      stopAutomatedModeTrigger = false\n      clearInterval(interval)\n    }\n    fetch('https://` + EtabPrefix + `.index-education.net/pronote/', {\n        redirect: 'manual'\n      })\n      .then(response => {\n        return response.text();\n      })\n      .then(data => {\n        if (data.includes('Votre adresse IP est provisoirement suspendue!') || data.includes('Your IP address is temporarily suspended!')) {\n          console.log('Continuing the loop.');\n          fetchData();\n        } else {\n          console.log('Launching requests. Relaunching the loop.');\n          PronoteUnbannedNotify();\n          for (var i = 0; i < requestNumber; i++) {\n            fetch('https://` + EtabPrefix + `.index-education.net/pronote/', {\n              mode: 'no-cors'\n            });\n          }\n          fetchData();\n        }\n      })\n      .catch(error => {\n        console.error('Error:', error);\n      });\n  }, 30000);\n}\n\nfunction PronoteUnbannedNotify() {\n  if (\"Notification\" in window) {\n    Notification.requestPermission()\n    then(function(permission) {\n        if (permission === \"granted\") {\n          var notification = new Notification(\"Your IP is unbanned from Pronote\", {\n            body: \"IP banned again\",\n          });\n          notification.onclick = function() {};\n        }\n      })\n      .catch(function(error) {\n        console.error(\"Error while requesting permission:\", error);\n      });\n  } else {\n    console.log(\"Notifications not supported in this browser.\");\n  }\n}\n\nfetchData();"}